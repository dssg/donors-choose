config_version: 'v7'

model_comment: 'quickstart test run'

temporal_config:

    # first date your feature data is good
    #
    feature_start_time: '2011-09-01'
    feature_end_time: '2013-06-01'

    # first date your labels are good
    # donorschoose: as far back as we have good donation data
    # defines entire span of label generation
    label_start_time: '2011-09-01'
    label_end_time: '2013-06-01'

    model_update_frequency: '1month'

    # we sample every day, since new projects are posted
    # every day
    training_as_of_date_frequencies: ['1day']

    # length of time defining a test set
    test_durations: ['1month']
    test_as_of_date_frequencies: ['1day']
    
    # like our project timeout
    training_label_timespans: ['4month']
    test_label_timespans: ['4month']
    
    # defines how far back a trainig set reaches
    max_training_histories: ['1month']

cohort_config:
  query: |
    SELECT distinct(entity_id)
      FROM optimized.projects
    WHERE date_posted = '{as_of_date}'::date - interval '1day'

label_config:
  query: |
    WITH donation_totals AS 
            (SELECT projects.entity_id, sum(donation_to_project) as total_donations, 
            total_price_excluding_optional_support AS total_price
            FROM optimized.projects 
            LEFT JOIN optimized.donations ON donations.entity_id = projects.entity_id
            WHERE projects.date_posted = '{as_of_date}'::date - interval '1day'
              AND donations.donation_timestamp < (projects.date_posted 
                + interval '{label_timespan}')
            GROUP BY projects.entity_id, projects.total_price_excluding_optional_support)
        SELECT entity_id,
        (total_donations >= total_price)::int AS outcome  
        FROM optimized.projects
        LEFT JOIN donation_totals using(entity_id)

  name: 'quickstart_label'


feature_aggregations:
  -
    prefix: 'basic_features'
    from_obj: 'optimized.projects'
    knowledge_date_column: 'date_posted'

    categoricals_imputation:
      all:
        type: 'null_category'          

    categoricals:
      - # test feature
        column: 'school_charter'
        metrics:
          - 'sum'
        choice_query: 'select distinct school_charter from optimized.projects'
    intervals: ['all']
    groups: ['entity_id']

  -
    prefix: 'donation_features'
    from_obj: 'optimized.time_series_features'
    knowledge_date_column: 'date_posted'

    aggregates_imputation:
      all:
        type: 'constant'
        value: 0 # for testing

    aggregates:
      - # proportion of fully funded projects posted within the last year at the same district
        quantity: 'district_funding_rate_1yr'
        metrics:
          - 'sum'
      - # average donations per project posted within the last year at the same district
        quantity: 'district_avg_donations_1yr'
        metrics:
          - 'sum'
      - # proportion of fully funded projects posted within the last two years at the same district
        quantity: 'district_funding_rate_2yr'
        metrics:
          - 'sum'
      - # average donations per project posted within the two years at the same district
        quantity: 'district_avg_donations_2yr'
        metrics:
          - 'sum'

        # teachers
      - # proportion of fully funded projects posted within the last year by the same teacher
        quantity: 'teacher_funding_rate_1yr'
        metrics:
          - 'sum'
      - # average donations per project posted within the last year by the same teacher
        quantity: 'teacher_avg_donations_1yr'
        metrics:
          - 'sum'
      - # proportion of fully funded projects posted within the last two years by the same teacher
        quantity: 'teacher_funding_rate_2yr'
        metrics:
          - 'sum'
      - # average donations per project posted within the two years by the same teacher
        quantity: 'teacher_avg_donations_2yr'
        metrics:
          - 'sum'

        # zip
      - # proportion of fully funded projects posted within the last year in the same zip code
        quantity: 'zip_funding_rate_1yr'
        metrics:
          - 'sum'
      - # average donations per project posted within the last year in the same zip code
        quantity: 'zip_avg_donations_1yr'
        metrics:
          - 'sum'
      - # proportion of fully funded projects posted within the last two years in the same zip code
        quantity: 'zip_funding_rate_2yr'
        metrics:
          - 'sum'
      - # average donations per project posted within the two years in the same zip code
        quantity: 'zip_avg_donations_2yr'
        metrics:
          - 'sum'

    intervals: ['all']
    groups: ['entity_id']
      
grid_config:
  'sklearn.ensemble.RandomForestClassifier':
      n_estimators: [1000, 2500, 5000, 10000]
      max_depth: [2, 5, 10, 50]
      max_features: [3, 5, 8, 10, 12, 15, 'auto', 'log2']
      min_samples_split: [2, 10, 25, 50]
  'sklearn.linear_model.LogisticRegression':

  'sklearn.tree.DecisionTreeClassifier':
scoring:
    testing_metric_groups:
        -
          metrics: [precision@]
          thresholds:
            percentiles: [10]
